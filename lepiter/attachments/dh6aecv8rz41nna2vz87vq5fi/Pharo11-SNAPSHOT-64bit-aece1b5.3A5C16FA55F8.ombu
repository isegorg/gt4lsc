OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-22T17:53:00.831639+01:00' ],
		#prior : OmReference [ 'Pharo11-SNAPSHOT-64bit-aece1b5.3A3050D57A68', '1' ],
		#self : OmReference [ '1' ]
	},
	#content : EpTraitAddition {
		#trait : RGTraitDefinition {
			#annotations : IdentityDictionary {
				#superclassName : #Trait,
				#definitionSource : 'Trait named: #TGtWithLscViewModel\r\tinstanceVariableNames: \'lscViewModel\'\r\tpackage: \'Gt4Lsc-! Views\'',
				#traitCompositionSource : '{}'
			},
			#name : #TGtWithLscViewModel,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#metaClass : RGMetatraitDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'TGtWithLscViewModel classTrait\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'TGtWithLscViewModel classTrait',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#baseClass : @7
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #TGtWithLscViewModel,
					#isMetaSide : false
				},
				#parent : @7,
				#content : ''
			},
			#category : #'Gt4Lsc-! Views',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-22T17:54:45.930115+01:00' ],
		#prior : OmReference [ '1' ],
		#self : OmReference [ '2' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtWithLscViewModel,
				#isMetaSide : false
			},
			#name : #hasLscViewModel,
			#protocol : #'api - lsc view model',
			#sourceCode : 'hasLscViewModel\r\t"Return a true if Lsc view model is assigned to the receiver element, false otherwise"\r\t<return: #Boolean>\r\r\t^ lscViewModel notNil',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-22T17:55:20.668698+01:00' ],
		#prior : OmReference [ '2' ],
		#self : OmReference [ '3' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtWithLscViewModel,
				#isMetaSide : false
			},
			#name : #lscViewModel,
			#protocol : #'api - lsc view model',
			#sourceCode : 'lscViewModel\r\t"Return a not-null Lsc view model assigned to the receiver element"\r\tself\r\t\tassert: [ self hasLscViewModel ]\r\t\tdescription: [ \'Lsc view model should be initialized\' ].\r\r\t^ lscViewModel',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-22T17:55:53.683186+01:00' ],
		#prior : OmReference [ '3' ],
		#self : OmReference [ '4' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtWithLscViewModel,
				#isMetaSide : false
			},
			#name : #'lscViewModel:',
			#protocol : #'api - lsc view model',
			#sourceCode : 'lscViewModel: aLscViewModel\r\t"Set a not-null Lsc view model assigned to the receiver element"\r\tself\r\t\tassert: [ aLscViewModel notNil ]\r\t\tdescription: [ \'Lsc view model must not be nil\' ].\r\r\tlscViewModel == aLscViewModel \r\t\tifTrue: [ ^ self ].\r\r\tlscViewModel := aLscViewModel',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-22T17:56:07.698149+01:00' ],
		#prior : OmReference [ '4' ],
		#self : OmReference [ '5' ]
	},
	#content : EpSessionSnapshot {
		#imageName : '/Users/fluque/work/osoco/BluePlaneLabs/advise-nuevo/GlamorousToolkit.image'
	}
}