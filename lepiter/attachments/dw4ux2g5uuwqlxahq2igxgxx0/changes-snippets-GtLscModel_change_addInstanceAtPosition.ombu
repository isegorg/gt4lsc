OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-05-20T20:06:29.76056+02:00' ],
		#prior : OmReference [ '0' ],
		#self : OmReference [ '1' ]
	},
	#content : EpMethodModification {
		#oldMethod : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #GtLscModel,
				#isMetaSide : false
			},
			#name : #'addInstance:atPosition:',
			#protocol : #'api - instances',
			#sourceCode : 'addInstance: aGtLscInstanceModel atPosition: anInteger\r\t| previousIndex|\r\tself assert: (self hasInstance: aGtLscInstanceModel) not description: \'Can not add an instance already added\'.\r\tself assert: (anInteger between: 1 and: self instancesSize + 1) description: \'Invalid position\'.\r\tpreviousIndex := anInteger - 1.\r\tself addIdTo: aGtLscInstanceModel.\r\tinstances add: aGtLscInstanceModel afterIndex: previousIndex.\r\tself notifyInstanceAdded: aGtLscInstanceModel atPosition: anInteger.',
			#stamp : '',
			#package : #Gt4Lsc
		},
		#newMethod : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #GtLscModel,
				#isMetaSide : false
			},
			#name : #'addInstance:atPosition:',
			#protocol : #'api - instances',
			#sourceCode : 'addInstance: aGtLscInstanceModel atPosition: anInteger\r\tself assert: (self hasInstance: aGtLscInstanceModel) not description: \'Can not add an instance already added\'.\r\tself addElement: aGtLscInstanceModel atPosition: anInteger inCollection: instances.\r\tself notifyInstanceAdded: aGtLscInstanceModel atPosition: anInteger.',
			#stamp : '',
			#package : #Gt4Lsc
		},
		#classPackageName : #Gt4Lsc
	}
}