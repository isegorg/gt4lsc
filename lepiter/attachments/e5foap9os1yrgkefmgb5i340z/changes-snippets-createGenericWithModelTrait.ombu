OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-05-06T15:26:49.6777+02:00' ],
		#prior : OmReference [ '0' ],
		#self : OmReference [ '1' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtLscWithModel,
				#isMetaSide : false
			},
			#name : #model,
			#protocol : #'api - model',
			#sourceCode : 'model\r\t"Return a not-null model assigned to the receiver view model"\r\tself\r\t\tassert: [ self hasModel ]\r\t\tdescription: [ \'model should be initialized\' ].\r\t\t\r\t^ model',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-05-06T15:26:49.6777+02:00' ],
		#prior : OmReference [ '1' ],
		#self : OmReference [ '2' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtLscWithModel,
				#isMetaSide : false
			},
			#name : #'model:',
			#protocol : #'api - model',
			#sourceCode : 'model: aModel\r\t"Set a not-null model assigned to the receiver view model"\r\tself\r\t\tassert: [ aModel notNil ]\r\t\tdescription: [ \'model must not be nil\' ].\r\r\tmodel == aModel \r\t\tifTrue: [ ^ self ].\r\r\tmodel ifNotNil: [ self unsubscribeFromModel ].\r\tmodel := aModel.\r\r\tself onModelChanged.\r\tself subscribeToModel',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-05-06T15:26:49.6777+02:00' ],
		#prior : OmReference [ '2' ],
		#self : OmReference [ '3' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtLscWithModel,
				#isMetaSide : false
			},
			#name : #hasModel,
			#protocol : #'api - model',
			#sourceCode : 'hasModel\r\t"Return a true if model is assigned to the receiver, false otherwise"\r\t<return: #Boolean>\r\r\t^ model notNil',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-05-06T15:26:49.6777+02:00' ],
		#prior : OmReference [ '3' ],
		#self : OmReference [ '4' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtLscWithModel,
				#isMetaSide : false
			},
			#name : #unsubscribeFromModel,
			#protocol : #'api - model',
			#sourceCode : 'unsubscribeFromModel\r\t"Is sent before a new model is assigned to the receiver.\r\tReceivers that subscribe to model are required to implement this methods"',
			#stamp : 'GlamorousAuthor 5/6/2025 15:43',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-05-06T15:26:49.6777+02:00' ],
		#prior : OmReference [ '4' ],
		#self : OmReference [ '5' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtLscWithModel,
				#isMetaSide : false
			},
			#name : #onModelChanged,
			#protocol : #'api - model',
			#sourceCode : 'onModelChanged\r\t"Is sent when a new model is assigned to the receiver"\r\t\r\tself explicitRequirement',
			#stamp : 'GlamorousAuthor 5/6/2025 15:44',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-05-06T15:26:49.6777+02:00' ],
		#prior : OmReference [ '5' ],
		#self : OmReference [ '6' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtLscWithModel,
				#isMetaSide : false
			},
			#name : #subscribeToModel,
			#protocol : #'api - model',
			#sourceCode : 'subscribeToModel\r\t"Is sent after a new model is assigned to the receiver.\r\tIt is required to unsubscribe from the model by implementing\r\t#unsubscribeFromModel if receiver subscribes to them"',
			#stamp : 'GlamorousAuthor 5/6/2025 15:45',
			#package : #Gt4Lsc
		}
	}
}