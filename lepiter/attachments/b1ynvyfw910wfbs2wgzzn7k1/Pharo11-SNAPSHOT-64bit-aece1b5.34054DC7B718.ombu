OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-28T16:08:44.6704+01:00' ],
		#prior : OmReference [ 'Pharo11-SNAPSHOT-64bit-aece1b5.2CBCC42857A0', '7' ],
		#self : OmReference [ '1' ]
	},
	#content : EpTraitAddition {
		#trait : RGTraitDefinition {
			#annotations : IdentityDictionary {
				#superclassName : #Trait,
				#definitionSource : 'Trait named: #TGtWithLscInstanceModel\r\tinstanceVariableNames: \'lscInstanceModel\'\r\tpackage: \'Gt4Lsc-! View models\'',
				#traitCompositionSource : '{}'
			},
			#name : #TGtWithLscInstanceModel,
			#methods : IdentityDictionary { },
			#protocols : Set [ ],
			#metaClass : RGMetatraitDefinition {
				#annotations : IdentityDictionary {
					#definitionSource : 'TGtWithLscInstanceModel classTrait\r\tinstanceVariableNames: \'\'',
					#traitCompositionSource : '{}'
				},
				#name : #'TGtWithLscInstanceModel classTrait',
				#methods : IdentityDictionary { },
				#protocols : Set [ ],
				#baseClass : @7
			},
			#comment : RGCommentDefinition {
				#annotations : IdentityDictionary {
					#className : #TGtWithLscInstanceModel,
					#isMetaSide : false
				},
				#parent : @7,
				#content : ''
			},
			#category : #'Gt4Lsc-! View models',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-28T16:10:10.680717+01:00' ],
		#prior : OmReference [ '1' ],
		#self : OmReference [ '2' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtWithLscInstanceModel,
				#isMetaSide : false
			},
			#name : #hasLscInstanceModel,
			#protocol : #'api - lsc instance model',
			#sourceCode : 'hasLscInstanceModel\r\t"Return a true if lsc instance model is assigned to the receiver, false otherwise"\r\t<return: #Boolean>\r\r\t^ lscInstanceModel notNil',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-28T16:12:42.231983+01:00' ],
		#prior : OmReference [ '2' ],
		#self : OmReference [ '3' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtWithLscInstanceModel,
				#isMetaSide : false
			},
			#name : #lscInstanceModel,
			#protocol : #'api - lsc instance model',
			#sourceCode : 'lscInstanceModel\r\t"Return a not-null lsc instance model assigned to the receiver view model"\r\tself\r\t\tassert: [ self hasLscInstanceModel ]\r\t\tdescription: [ \'lsc instance model should be initialized\' ].\r\t\t\r\t^ lscInstanceModel',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-28T16:15:39.569418+01:00' ],
		#prior : OmReference [ '3' ],
		#self : OmReference [ '4' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtWithLscInstanceModel,
				#isMetaSide : false
			},
			#name : #'lscInstanceModel:',
			#protocol : #'api - lsc instance model',
			#sourceCode : 'lscInstanceModel: aLscInstanceModel\r\t"Set a not-null lsc instance domain model assigned to the receiver view model"\r\tself\r\t\tassert: [ aLscInstanceModel notNil ]\r\t\tdescription: [ \'lsc instance model must not be nil\' ].\r\r\tlscInstanceModel == aLscInstanceModel \r\t\tifTrue: [ ^ self ].\r\r\tlscInstanceModel ifNotNil: [ self unsubscribeFromLscInstanceModel ].\r\tlscInstanceModel := aLscInstanceModel.\r\r\tself onLscInstanceModelChanged.\r\tself subscribeToLscInstanceModel',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-28T16:17:56.650867+01:00' ],
		#prior : OmReference [ '4' ],
		#self : OmReference [ '5' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtWithLscInstanceModel,
				#isMetaSide : false
			},
			#name : #subscribeToLscInstanceModel,
			#protocol : #'api - lsc instance model',
			#sourceCode : 'subscribeToLscInstanceModel\r\t"Is sent after a new lsc instance model is assigned to the view model.\r\tIt is required to unsubscribe from the domain model by implementing\r\t#unsubscribeFromLscInstanceModel if view model subscribes to them"',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-28T16:18:28.999095+01:00' ],
		#prior : OmReference [ '5' ],
		#self : OmReference [ '6' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtWithLscInstanceModel,
				#isMetaSide : false
			},
			#name : #unsubscribeFromLscInstanceModel,
			#protocol : #'api - lsc instance model',
			#sourceCode : 'unsubscribeFromLscInstanceModel\r\t"Is sent before a new lsc instance model is assigned to the view model.\r\tView models that subscribe to lsc instance model are required to implement this methods"',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-28T16:19:12.897211+01:00' ],
		#prior : OmReference [ '6' ],
		#self : OmReference [ '7' ]
	},
	#content : EpMethodAddition {
		#method : RGMethodDefinition {
			#annotations : IdentityDictionary {
				#className : #TGtWithLscInstanceModel,
				#isMetaSide : false
			},
			#name : #onLscInstanceModelChanged,
			#protocol : #'api - lsc instance model',
			#sourceCode : 'onLscInstanceModelChanged\r\t"Is sent when a new lsc instance model is assigned to the view model"\r\t\r\tself explicitRequirement',
			#stamp : '',
			#package : #Gt4Lsc
		}
	}
}OmEntry {
	#tags : {
		#author : 'GlamorousAuthor',
		#time : DateAndTime [ '2025-03-28T16:19:33.72401+01:00' ],
		#prior : OmReference [ '7' ],
		#self : OmReference [ '8' ]
	},
	#content : EpSessionSnapshot {
		#imageName : '/Users/fluque/work/osoco/BluePlaneLabs/advise-nuevo/GlamorousToolkit.image'
	}
}